# A Solver Combination Ablation pipeline workflow

# Loads two train/test URLs directly into script

# Packages up an entire dir. This is to support transitive
# dependencies in scripts (scripts calling other scripts)
package {id:"aristoScripts", source:"solver-combo/aristo-scripts"}
package {id:"mathematicaScripts", source:"solver-combo/mathematica-scripts"}
package {id:"pythonScripts", source:"solver-combo/python-scripts"}

# Generate ablation data
{file:"SolverAblationStudy.sh", package:"aristoScripts"} -s Arizona,Inference,Salience -o {out:"outputDir", type:"dir"} --train1 {upload:"http://evaluation-framework.dev.allenai.org:8083/api/evaluations/b6d38f34-d08b-478c-af60-99c04b1b4d2d/feature-vectors", type:"url"} --test1 {upload:"http://evaluation-framework.dev.allenai.org:8083/api/evaluations/cdece2c1-32f4-4613-84d6-a92e4e73a1b9/feature-vectors", type:"url"}
# Analyze ablation data
{file:"AblationStudyReport.m", package:"mathematicaScripts"} -i {ref:"outputDir"} -html {out:"htmlFile", suffix:".html"} -csv {out:"csvFile", suffix:".csv"}
# Run Python script
{file:"runiPythonNotebook.sh", package:"pythonScripts"} {upload:"./solver-combo/python-scripts/testScript.ipynb"} {ref:"outputDir"} {out:"htmlReport", suffix:".html"}
